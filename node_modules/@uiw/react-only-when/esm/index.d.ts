import React, { PropsWithChildren } from 'react';
export * from './If';
export interface OnlyWhenProps {
    /** A single child element */
    children: React.ReactElement;
    /** When true, children will rendered as is */
    when: boolean;
    /** This is working in combination with hiddenMode={"css"} */
    className?: string;
    /**
     * Determines how "react-only-when" should hide the child element
     * "null": Will not render the child
     * "display": Will render the child with display:none
     * "visibility": Will render the child with visibility:hidden
     * "css": Will render the child with a CSS class (you can pass it a custom className prop)
     */
    hiddenMode?: 'null' | 'display' | 'visibility' | 'css';
}
export default function OnlyWhen(props: PropsWithChildren<OnlyWhenProps>): import("react/jsx-runtime").JSX.Element;
